{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/message-list/message-list.component.ts","./src/app/components/message-list/message-list.html","./src/app/components/message-list/message-list.module.ts","./src/app/services/messages.api.ts","./src/app/services/messages.service.ts","./src/environments/environment.ts","./src/main.ts","util (ignored)","util (ignored)?88e8"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubConnection } from '@aspnet/signalr-client';\nimport { MessagesService } from './services/messages.service';\nimport { Subject } from 'rxjs/Subject';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { MessagesApi } from './services/messages.api';\nimport { MessagesService } from './services/messages.service';\nimport { HttpModule } from '@angular/http';\nimport { MessageListComponent } from './components/message-list/message-list.component';\nimport { RouterModule } from '@angular/router';\nimport { MessageListModule } from './components/message-list/message-list.module';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        MessageListModule,\n        RouterModule.forRoot([\n            { path: '', redirectTo: 'message-list', pathMatch: 'full' },\n            { path: 'message-list', component: MessageListComponent },\n            { path: '**', redirectTo: 'message-list' }\n        ])\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubConnection } from '@aspnet/signalr-client';\nimport { Subject } from 'rxjs/Subject';\nimport { MessagesService } from '../../services/messages.service';\n\n@Component({\n    templateUrl: './message-list.html',\n})\nexport class MessageListComponent implements OnInit , OnDestroy {\n    messages: string[] = [];\n    private destroyed: Subject<boolean> = new Subject();\n    constructor(private messagesService: MessagesService) { }\n\n    ngOnInit() {\n        this.getCurrentMessagesAndSubscribe();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next(true);\n      }\n\n    private getCurrentMessagesAndSubscribe() {\n        this.messagesService.getMessages()\n        .subscribe((messages: string[]) => {\n            this.messages = messages;\n\n            this.messagesService.messageReceivedSubject.subscribe((message: string) => {\n                this.messages.push(message);\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/message-list/message-list.component.ts","module.exports = \"<h3>Список сообщений с сервера</h3>\\n<div *ngFor=\\\"let item of messages\\\">\\n    {{item}}\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/message-list/message-list.html\n// module id = ./src/app/components/message-list/message-list.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { MessageListComponent } from './message-list.component';\nimport { MessagesApi } from '../../services/messages.api';\nimport { MessagesService } from '../../services/messages.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [\n        MessageListComponent\n    ],\n    imports: [\n        HttpModule,\n        CommonModule\n    ],\n    providers: [\n        MessagesApi,\n        MessagesService,\n    ],\n    exports: [\n        MessageListComponent\n    ]\n})\nexport class MessageListModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/message-list/message-list.module.ts","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class MessagesApi {\n\n    constructor(private http: Http) {\n    }\n\n    getMessages(): Observable<string[]> {\n\n        return this.http.get('/api/messages')\n            .map(result => {\n                return result.json() as string[];\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/messages.api.ts","import { Injectable, OnInit } from '@angular/core';\nimport { HubConnection } from '@aspnet/signalr-client';\nimport { Subject } from 'rxjs/Subject';\nimport { MessagesApi } from './messages.api';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class MessagesService {\n\n    public messageReceivedSubject = new Subject<string>();\n\n    private _hubConnection: HubConnection;\n\n    constructor(private messagesApi: MessagesApi) {\n        this.initHub();\n    }\n\n    getMessages(): Observable<string[]> {\n        return this.messagesApi.getMessages();\n    }\n\n    private initHub() {\n        this._hubConnection = new HubConnection('/hubs/messages');\n\n        this._hubConnection.on('Send', (data: any) => {\n            const received = `${data}`;\n\n            this.messageReceivedSubject.next(received);\n        });\n\n        this._hubConnection.start()\n            .then(() => {\n                console.log('connected to hub');\n            })\n            .catch(err => {\n                console.log('Error while establishing connection', err);\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/messages.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1\n// module chunks = main","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 2\n// module chunks = main"],"sourceRoot":"webpack:///"}